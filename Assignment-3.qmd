---
title: "Assignment-3"
author: "Anous Ahmed"
format: html
editor: visual
---

## Quarto

```{r setup}
library("tidyverse")
install.packages("stevedata")
library("stevedata")
install.packages("tidytuesdayR")
library("tidytuesdayR")
library(tidymodels)
install.packages("caret")  
library(caret)
```

```{r}
crime_data93 = af_crime93
```

**1. Describe your dataset. What is the dataset about? What are the features? What is the target variable? How many samples are there in the dataset? How many features are there in the dataset? Remember to prepare your data in a recipe, and to split the data into training and testing sets. Normalize the data if necessary! Make sure to clean your data, and deal with missing values if necessary.**

**Describing the Dataset** The af_crime93 dataset contains statewide crime and socioeconomic data from the year 1993 for all 51 U.S. states (including Washington, D.C.). It includes various crime rates and demographic statistics.

**Features (Independent Variables):**

-   **state** – Name of the U.S. state (character variable).

-   **murder** – Murder rate per 100,000 people (numeric).

-   **poverty** – Percentage of the population living below the poverty line (numeric).

-   **single** – Percentage of families headed by a single parent (numeric).

-   **metro** – Percentage of the population living in metropolitan areas (numeric).

-   **white** – Percentage of the state’s population that is White (numeric).

-   **highschool** – Percentage of the population that graduated from high school (numeric).

**Target Variable (Dependent Variable):**

```{r}
# This is the main variable we are trying to predict using the other features.
```

-   **violent** – Violent crime rate per 100,000 people (numeric). This is the main variable we are trying to predict using the other features.

```{r}
dim(crime_data93)
# There are 51 observations and 8 variables 
# One of which is the target variable = violent
```

```{r}
set.seed(123)
# Split the data into 80% training and 20% testing
data_split = initial_split(af_crime93, prop = 0.8)
train_data = training(data_split)
test_data = testing(data_split)
```

```{r}
# Normalize the data (excluding the first column, which is likely categorical)
preProc <- preProcess(train_data[, -1], method = c("center", "scale"))

# Apply normalization to training and testing datasets
train_data_norm <- predict(preProc, train_data[, -1])
test_data_norm <- predict(preProc, test_data[, -1])
```

**2. Describe the model that you are using. What is the model? Why do you think it will work well with the dataset that you have chosen? What are the hyperparameters of the model? Define whether you are using a classification model or a regression model. Answer all of these questions BEFORE you train the model.**

**Model Selection and Justification**

For the af_crime93 dataset, I will run a multiple linear regression model to predict the impact on the violent crime rate (violet) based on other independent variables (murder, poverty, single, metro, white, high school) in the dataset.

I am running a multiple linear regression model because the target variable (violent) is continuous (measured as a rate per 100,000 people) and since I’m predicting a numerical value and not any classifying categories. Therefore, this is a regression model because the output is a continuous variable (violent crime rate) rather than discrete categories. Moreover, multiple linear regression is effective when there is a linear relationship between independent variables and the target. The model would also allow us to interpret how each predictor impacts the violent crime rate by looking at its coefficients. This would help policymakers in developing insights from the model to understand what factors influence crime rates in the U.S. states.

**Hyperparameters of the Model**

Linear regression has fewer hyperparameters. However, we can still adjust certain settings:

-   Regularization (if used): Lasso (L1) or Ridge (L2) regularization can be applied to prevent overfitting.

-   Feature Scaling: Since linear regression is sensitive to different scales of variables, we normalized the data.

-   Train-Test Split: Ensuring an 80-20 split maintains a balance between training and evaluation.

**3. Train the model. If there are hyperparameters that you need to tune, tune them. If you choose not to tune them, explain why.**



**4. Evaluate the model. Decide which metrics are relevant for your model, and evaluate the model using those metrics.**